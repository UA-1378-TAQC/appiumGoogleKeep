name: Java CI Build with Discord Notifications

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, dev]
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Notify Discord on PR Created or Updated
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize')
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          ACTOR="${{ github.actor }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"üì£ Pull Request [$PR_TITLE]($PR_URL) created or updated by $ACTOR\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PULL_REQUEST }}

      - name: Notify Discord on PR Build Started
        if: github.event_name == 'pull_request'
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"‚öôÔ∏è Build started for PR: [$PR_TITLE]($PR_URL)\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PULL_REQUEST }}

      - name: Build with Maven (skip tests)
        run: mvn clean install -DskipTests --batch-mode --no-transfer-progress

      - name: Notify Discord on PR Build Success
        if: github.event_name == 'pull_request' && success()
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"‚úÖ PR build passed for [$PR_TITLE]($PR_URL) by ${{ github.actor }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PULL_REQUEST }}

      - name: Notify Discord on PR Build Failure
        if: github.event_name == 'pull_request' && failure()
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"‚ùå PR build failed for [$PR_TITLE]($PR_URL) by ${{ github.actor }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PULL_REQUEST }}


      - name: Notify Discord on Push Build Started
        if: github.event_name == 'push'
        run: |
          BRANCH="${{ github.ref_name }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"‚öôÔ∏è Build started for push on branch $BRANCH by ${{ github.actor }}. Commit: ${{ github.sha }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PUSH }}

      - name: Notify Discord on Push Build Success
        if: github.event_name == 'push' && success()
        run: |
          BRANCH="${{ github.ref_name }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"‚úÖ Build successful on branch $BRANCH by ${{ github.actor }}. Commit: ${{ github.sha }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PUSH }}

      - name: Notify Discord on Push Build Failure
        if: github.event_name == 'push' && failure()
        run: |
          BRANCH="${{ github.ref_name }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"‚ùå Build failed on branch $BRANCH by ${{ github.actor }}. Commit: ${{ github.sha }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_PUSH }}
